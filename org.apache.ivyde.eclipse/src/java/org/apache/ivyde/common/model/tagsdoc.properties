#	 ***************************************************************
#	 * Licensed to the Apache Software Foundation (ASF) under one
#	 * or more contributor license agreements.  See the NOTICE file
#	 * distributed with this work for additional information
#	 * regarding copyright ownership.  The ASF licenses this file
#	 * to you under the Apache License, Version 2.0 (the
#	 * "License"); you may not use this file except in compliance
#	 * with the License.  You may obtain a copy of the License at
#	 *
#	 *   https://www.apache.org/licenses/LICENSE-2.0
#	 *
#	 * Unless required by applicable law or agreed to in writing,
#	 * software distributed under the License is distributed on an
#	 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#	 * KIND, either express or implied.  See the License for the
#	 * specific language governing permissions and limitations
#	 * under the License.
#	 ***************************************************************
# This file is built using the tagsdoc target of the ivy build-release.xml

##### ivysettings.resolvers.bintray
ivysettings.resolvers.bintray = This resolver uses Bintray DaaS (Distribution as a Service) platform to retrieve artifacts.
ivysettings.resolvers.bintray.@subject = Bintray username of a repository owner.
ivysettings.resolvers.bintray.@repo = User’s repository name.
##### ivysettings.resolvers.chain
ivysettings.resolvers.chain = This resolver is only a container of a chain of other resolvers.
ivysettings.resolvers.chain.@returnFirst = true if the first found should be returned.
ivysettings.resolvers.chain.@dual = true if the chain should behave like a dual chain. (since 1.3)
##### ivysettings.resolvers.dual
ivysettings.resolvers.dual = This resolver delegates its job to one resolver for Ivy files and another for artifacts.
##### ivysettings.resolvers.filesystem
ivysettings.resolvers.filesystem = This resolver uses the file system to resolve Ivy files and artifacts.
ivysettings.resolvers.filesystem.@m2compatible = True if this resolver should be Maven 2 compatible, false otherwise (since 1.3)
ivysettings.resolvers.filesystem.@local = True if this resolver should be considered local, false otherwise (since 1.4). See useOrigin attribute on the caches element for details.
ivysettings.resolvers.filesystem.@transactional = true to force the use of transaction, false to prevent the use of transaction, auto to get transaction when possible (since 2.0). See above for details.
##### ivysettings.resolvers.ibiblio
ivysettings.resolvers.ibiblio = This resolver usually uses ibiblio to find artifacts.
ivysettings.resolvers.ibiblio.@root = the root of the artifact repository.
ivysettings.resolvers.ibiblio.@pattern = a pattern describing the layout of the artifact repository.
ivysettings.resolvers.ibiblio.@m2compatible = True if this resolver should be Maven 2 compatible, false otherwise (since 1.3)
ivysettings.resolvers.ibiblio.@usepoms = True if this resolver should use Maven POMs when it is already in m2compatible mode, false otherwise (since 1.4)
ivysettings.resolvers.ibiblio.@useMavenMetadata = True if this resolver should use maven-metadata.xml files to list available revisions, false to use directory listing (since 2.0)
##### ivysettings.resolvers.ivyrep
ivysettings.resolvers.ivyrep = This resolver usually uses an URL based repository usually similar in structure to the, now defunct, http://ivyrep.jayasoft.org/ repo, to find Ivy files, and ibiblio to find artifacts.
ivysettings.resolvers.ivyrep.@ivyroot = the root of the Ivy repository.
ivysettings.resolvers.ivyrep.@ivypattern = a pattern describing the layout of the Ivy repository.
ivysettings.resolvers.ivyrep.@artroot = the root of the artifacts repository.
ivysettings.resolvers.ivyrep.@artpattern = a pattern describing the layout of the artifacts repository.
##### ivysettings.resolvers.jar
ivysettings.resolvers.jar = This resolver uses a specified jar resolve Ivy files and artifacts.
ivysettings.resolvers.jar.@file = the absolute path of the jar
ivysettings.resolvers.jar.@url = the URL of the jar
##### ivysettings.resolvers.mirroredurl
ivysettings.resolvers.mirroredurl = This resolver can resolve dependencies against several mirrors of the same repository.
ivysettings.resolvers.mirroredurl.@m2compatible = True if this resolver should be Maven 2 compatible, false otherwise
ivysettings.resolvers.mirroredurl.@mirrorListUrl = The URL where to retrieve the list of mirror URLs.
##### ivysettings.resolvers.obr
ivysettings.resolvers.obr = This resolver is one of the resolver which supports OSGi dependencies.
ivysettings.resolvers.obr.@repoXmlURL = the URL of the obr.xml to load.
ivysettings.resolvers.obr.@repoXmlFile = the local path of the obr.xml to load.
ivysettings.resolvers.obr.@requirementStrategy = defines how strict should be the OSGi resolution. Can be one of first or noambiguity
ivysettings.resolvers.obr.@metadataTtl = the time in milliseconds the obr.xml is considered up to date
ivysettings.resolvers.obr.@forceMetadataUpdate = force the update of the obr.xml without checking its freshness
##### ivysettings.resolvers.osgi-agg
ivysettings.resolvers.osgi-agg = This resolver is like a classic chain resolver, but with better support for OSGi metadata.
##### ivysettings.resolvers.packager
ivysettings.resolvers.packager = This resolver accesses Ivy files and "packaging instructions" from an online "packager" repository.
ivysettings.resolvers.packager.@buildRoot = Defines the root of the temporary build directory hierarchy
ivysettings.resolvers.packager.@resourceCache = Directory where downloaded resources should be cached
ivysettings.resolvers.packager.@resourceURL = Ivy pattern that specifies a base URL to use for downloading all resources; overrides the URLs in the packaging instructions
ivysettings.resolvers.packager.@restricted = True if this resolver should only allow "safe" Ant tasks in the packaging instructions. Warning: setting restricted to false creates a security problem due to Ant tasks like delete, exec, etc. Do not use this setting when your configuration points to an untrusted repository.
ivysettings.resolvers.packager.@verbose = True to run Ant with the -verbose flag
ivysettings.resolvers.packager.@quiet = True to run Ant with the -quiet flag
ivysettings.resolvers.packager.@validate = True if this resolver should validate (via XSD) the downloaded XML packaging instructions
ivysettings.resolvers.packager.@preserveBuildDirectories = True if this resolver should not delete the temporary build directories in which the Ant tasks are executed (for debugging purposes)
##### ivysettings.resolvers.sftp
ivysettings.resolvers.sftp = This resolver can be used when your Ivy repository is located on a server accessible via SFTP.
ivysettings.resolvers.sftp.@user = The username to provide as credential
ivysettings.resolvers.sftp.@userPassword = The password to provide as credential
ivysettings.resolvers.sftp.@keyFile = Path to the keyfile to use for authentication
ivysettings.resolvers.sftp.@keyFilePassword = the password used to protect the key file
ivysettings.resolvers.sftp.@host = The host to connect to
ivysettings.resolvers.sftp.@port = The port to connect to
ivysettings.resolvers.sftp.@sshConfig = Path to an OpenSSH-style config file containing additional configuration
##### ivysettings.resolvers.ssh
ivysettings.resolvers.ssh = This resolver can be used when your Ivy repository is located on a server accessible via SSH.
ivysettings.resolvers.ssh.@user = The username to provide as credential
ivysettings.resolvers.ssh.@userPassword = The password to provide as credential
ivysettings.resolvers.ssh.@keyFile = Path to the keyfile to use for authentication
ivysettings.resolvers.ssh.@keyFilePassword = the password used to protect the key file
ivysettings.resolvers.ssh.@host = The host to connect to
ivysettings.resolvers.ssh.@port = The port to connect to
ivysettings.resolvers.ssh.@sshConfig = Path to an OpenSSH-style config file containing additional configuration
ivysettings.resolvers.ssh.@publishPermissions = A four digit string (e.g., 0644, see "man chmod", "man open") specifying the permissions of the published files. (since 2.0)
##### ivysettings.resolvers.updatesite
ivysettings.resolvers.updatesite = This resolver is one of the resolvers which support OSGi dependencies. It resolves modules (OSGi bundles) which are hosted in an Eclipse update site.
ivysettings.resolvers.updatesite.@url = the URL of the Eclipse updatesite
ivysettings.resolvers.updatesite.@requirementStrategy = defines how strict should be the OSGi resolution. Can be one of first or noambiguity
ivysettings.resolvers.updatesite.@metadataTtl = the time in milliseconds the updatesite metadata are considered up to date
ivysettings.resolvers.updatesite.@forceMetadataUpdate = force the update of the updatesite metadata without checking their freshness
##### ivysettings.resolvers.url
ivysettings.resolvers.url = This resolver is one of the most generic. In fact, most of the previous resolvers can be obtained by a particular configuration of this one.
ivysettings.resolvers.url.@m2compatible = True if this resolver should be Maven 2 compatible, false otherwise (since 1.3)
##### ivysettings.resolvers.vfs
ivysettings.resolvers.vfs = This resolver is certainly the most capable, since it relies on Apache Commons VFS, which gives an uniform access to a good number of file systems, including FTP, WebDAV, zip, …
##### ivysettings.caches
ivysettings.caches = Configures the Ivy cache system.
ivysettings.caches.@default = the name of the default cache to use on all resolvers not defining the cache instance to use
ivysettings.caches.@defaultCacheDir = a path to a directory to use as default basedir for both resolution and repository cache(s)
ivysettings.caches.@resolutionCacheDir = the path of the directory to use for all resolution cache data
ivysettings.caches.@repositoryCacheDir = the path of the default directory to use for repository cache data. This should not point to a directory used as a repository!
ivysettings.caches.@ivyPattern = default pattern used to indicate where Ivy files should be put in the repository cache(s)
ivysettings.caches.@artifactPattern = default pattern used to indicate where artifact files should be put in the repository cache(s)
ivysettings.caches.@checkUpToDate = Deprecated, we recommend using overwriteMode on the retrieve task instead. Indicates if date should be checked before retrieving artifacts from cache.
ivysettings.caches.@useOrigin = the default value to use for useOrigin for caches in which it isn’t specifically defined. Use true to avoid the copy of local artifacts to the cache and use directly their original location.
ivysettings.caches.@lockStrategy = the name of the default lock strategy to use when accessing repository cache(s)
##### ivysettings.caches.cache
ivysettings.caches.cache = Defines a repository cache instance based on the default repository cache implementation.
ivysettings.caches.cache.@name = name of the cache instance
ivysettings.caches.cache.@basedir = the path of the base directory to use to put repository cache data. This should not point to a directory used as a repository!
ivysettings.caches.cache.@ivyPattern = the pattern to use to store cached Ivy files
ivysettings.caches.cache.@artifactPattern = the pattern to use to store cached artifacts
ivysettings.caches.cache.@useOrigin = true to avoid the copy of local artifacts to the cache and use directly their original location, false otherwise. To know if an artifact is local, Ivy asks the resolver. Only filesystem resolver is considered local by default, but this can be disabled if you want to force the copy on one filesystem resolver and use the original location on another. Note that it is safe to use useOrigin even if you use the cache for some non local resolvers. In this case the cache will behave as usual, copying files to the cache. Note also that this only applies to artifacts, not to Ivy files, which are still copied in the cache.
ivysettings.caches.cache.@lockStrategy = the name of the lock strategy to use for this cache
ivysettings.caches.cache.@defaultTTL = the default TTL to use when no specific one is defined
ivysettings.caches.cache.@memorySize = the number of parsed module descriptors to keep in a memory cache.
##### ivysettings.caches.cache.TTL
ivysettings.caches.cache.TTL = Defines a TTL (Time To Live) rule for resolved revision caching.
ivysettings.caches.cache.TTL.@organisation = the organisation to match to apply the rule.
ivysettings.caches.cache.TTL.@module = the module’s name to match to apply the rule.
ivysettings.caches.cache.TTL.@revision = the module’s revision to match to apply the rule. Note that the version is not resolved when evaluating the rule ('latest.integration', for instance).
ivysettings.caches.cache.TTL.@attribute = an extra attribute to match to apply the rule.
ivysettings.caches.cache.TTL.@matcher = the matcher to use to match the modules to which the resolver should be applied
ivysettings.caches.cache.TTL.@duration = the TTL to apply (see above for format)
##### ivysettings.classpath
ivysettings.classpath = Includes a jar in the classpath used to load plugins.
ivysettings.classpath.@url = the URL of a jar to add to the classpath
ivysettings.classpath.@file = a jar to add to the classpath
##### ivysettings.conflict-managers
ivysettings.conflict-managers = Defines a list of conflict managers usable in Ivy.
##### ivysettings.credentials
ivysettings.credentials = Configures HTTP authentication credentials.
ivysettings.credentials.@host = the name of the host
ivysettings.credentials.@realm = the name of the realm
ivysettings.credentials.@username = the username
ivysettings.credentials.@passwd = the password
##### ivysettings.include
ivysettings.include = Includes another Ivy settings file as if it were part of this one.
ivysettings.include.@url = a URL to the Ivy settings file to include
ivysettings.include.@file = a path to the Ivy settings file to include
ivysettings.include.@optional = indicates whether Ivy should throw an error if the specified file doesn’t exist (since 2.4).
##### ivysettings.latest-strategies
ivysettings.latest-strategies = Defines a list of latest strategies usable in Ivy.
##### ivysettings.lock-strategies
ivysettings.lock-strategies = Defines a list of lock strategies usable in Ivy.
##### ivysettings.macrodef
ivysettings.macrodef = Defines a new dependency resolver type based upon another.
ivysettings.macrodef.@name = name of the resolver type created
##### ivysettings.macrodef.attribute
ivysettings.macrodef.attribute = Defines a macrodef attribute.
ivysettings.macrodef.attribute.@name = the name of the attribute
ivysettings.macrodef.attribute.@default = the default value of the attribute if none is specified
##### ivysettings.modules.module
ivysettings.modules.module = Define a module set rule.
ivysettings.modules.module.@organisation = the organisation to match to apply the rule.
ivysettings.modules.module.@name = the module’s name to match to apply the rule.
ivysettings.modules.module.@revision = the module’s revision to match to apply the rule. Note that the version may not be resolved yet (be latest.integration, for instance), so be very careful when using this attribute (since 2.0).
ivysettings.modules.module.@attribute = an extra attribute to match to apply the rule (since 2.0).
ivysettings.modules.module.@matcher = the matcher to use to match the modules to which the resolver should be applied (since 1.3).
ivysettings.modules.module.@resolver = the name of the resolver to apply. The resolver must have been defined in the resolvers section of the settings file.
ivysettings.modules.module.@conflict-manager = the name of the conflict manager to apply (since 1.4).
ivysettings.modules.module.@branch = the default branch to apply (since 1.4).
ivysettings.modules.module.@resolveMode = the resolve mode to use (since 2.0).
##### ivysettings.modules
ivysettings.modules = Defines per module or module set settings.
##### ivysettings.namespaces.namespace
ivysettings.namespaces.namespace = Defines a new namespace. A namespace is identified by a name, which can be referenced by one of the resolvers.
ivysettings.namespaces.namespace.@name = the namespace name
ivysettings.namespaces.namespace.@chainrules = true to indicate that namespaces rules should be chained, false otherwise
##### ivysettings.namespaces.namespace.rule.fromsystem.dest
ivysettings.namespaces.namespace.rule.fromsystem.dest = Defines the translation part of a translation rule. If a name has matched a corresponding src, it will be translated using this dest part.
ivysettings.namespaces.namespace.rule.fromsystem.dest.@org = the new organisation name
ivysettings.namespaces.namespace.rule.fromsystem.dest.@module = the new module name
ivysettings.namespaces.namespace.rule.fromsystem.dest.@rev = the new revision
##### ivysettings.namespaces.namespace.fromsystem
ivysettings.namespaces.namespace.fromsystem = Defines a one way translation rule, i.e. a translation from system namespace to the defined namespace or vice versa.
##### ivysettings.namespaces.namespace.rule
ivysettings.namespaces.namespace.rule = Defines a new namespace rule.
##### ivysettings.namespaces.namespace.rule.fromsystem.src
ivysettings.namespaces.namespace.rule.fromsystem.src = Defines the matching part of a translation rule.
ivysettings.namespaces.namespace.rule.fromsystem.src.@org = the organisation to match as a regexp
ivysettings.namespaces.namespace.rule.fromsystem.src.@module = the module name to match as a regexp
ivysettings.namespaces.namespace.rule.fromsystem.src.@rev = the revision to match as a regexp
##### ivysettings.namespaces
ivysettings.namespaces = Namespaces are an advanced feature of Ivy which let you use resolvers in which module names and organisations are not consistent between each other.
##### ivysettings.outputters
ivysettings.outputters = Defines a list of report outputters usable in Ivy.
##### ivysettings.parsers
ivysettings.parsers = Defines a list of module descriptor parsers usable in Ivy. Each parser defines which resources (which descriptor file) it accepts.
##### ivysettings.properties
ivysettings.properties = Loads a properties file into Ivy variables.
ivysettings.properties.@file = a path to a properties file to load
ivysettings.properties.@environment = the prefix to use when retrieving environment variables (since 2.0)
ivysettings.properties.@override = indicates if the variable found in the properties file should override its previous value, if any (since 1.3)
##### ivysettings.property
ivysettings.property = Defines an Ivy variable.
ivysettings.property.@name = the name of the variable to define
ivysettings.property.@value = the new value the variable must take
ivysettings.property.@override = true if the previous value (if any) of the variable should overridden, false otherwise
ivysettings.property.@ifset = the variable will be set only if the provided 'ifset' variable is already set (since 2.4)
ivysettings.property.@unlessset = the variable will not be set unless the provided 'unlessset' variable is set (since 2.4)
##### ivysettings.resolvers
ivysettings.resolvers = Defines a list of dependency resolvers usable in Ivy.
ivysettings.resolvers.@ivyrep = Standard
ivysettings.resolvers.@ibiblio = Standard
ivysettings.resolvers.@bintray = Standard
ivysettings.resolvers.@packager = Standard
ivysettings.resolvers.@filesystem = Standard
ivysettings.resolvers.@url = Standard
ivysettings.resolvers.@mirroredurl = Standard
ivysettings.resolvers.@vfs = Standard
ivysettings.resolvers.@ssh = Standard
ivysettings.resolvers.@sftp = Standard
ivysettings.resolvers.@jar = Standard
ivysettings.resolvers.@chain = Composite
ivysettings.resolvers.@dual = Composite
ivysettings.resolvers.@obr = Standard
ivysettings.resolvers.@updatesite = Standard
ivysettings.resolvers.@osgi-agg = Composite
##### ivysettings.settings
ivysettings.settings = Configures some important Ivy behaviour: default resolver, latest strategy, conflict manager and some others.
ivysettings.settings.@defaultResolver = the name of the default resolver to use
ivysettings.settings.@defaultLatestStrategy = the name of the default latest strategy to use
ivysettings.settings.@defaultConflictManager = the name of the default conflict manager to use
ivysettings.settings.@defaultBranch = the default branch to use for all modules, except if they have a module specific branch setting. (since 1.4)
ivysettings.settings.@defaultResolveMode = the default resolve mode to use for all modules, except if they have a module specific resolve mode setting. (since 2.0)
ivysettings.settings.@circularDependencyStrategy = the name of the circular dependency strategy to use (since 1.4)
ivysettings.settings.@validate = Indicates if Ivy files should be validated against ivy.xsd or not.
ivysettings.settings.@useRemoteConfig = true to configure ivyrep and ibiblio resolver from a remote settings file (updated with changes in those repository structure if any) (since 1.2)
ivysettings.settings.@httpRequestMethod = specifies the HTTP method to use to retrieve information about an URL. Possible values are 'GET' and 'HEAD'. This setting can be used to solve problems with firewalls and proxies. (since 2.0)
ivysettings.settings.@defaultCache = a path to a directory to use as default basedir for both resolution and repository cache(s). Deprecated, we recommend using defaultCacheDir on the caches tag instead
ivysettings.settings.@checkUpToDate = Indicates if date should be checked before retrieving artifacts from cache. Deprecated, we recommend using overwriteMode on the retrieve task instead
ivysettings.settings.@cacheIvyPattern = a pattern to indicate where Ivy files should be put in cache. Deprecated, we recommend using ivyPattern on the caches tag instead
ivysettings.settings.@cacheArtifactPattern = a pattern to indicate where artifact files should be put in cache. Deprecated, we recommend using artifactPattern on the caches tag instead
##### ivysettings.signers
ivysettings.signers = Defines a list of detached signature generators usable in Ivy. Each generator is identified by its name, given as an attribute.
ivysettings.signers.@name = The name of the signature generator.
ivysettings.signers.@secring = The location of the secret keyring.
ivysettings.signers.@keyId = The identifier of the key to use. The keyword auto can be used to indicate a key will be selected automatically.
ivysettings.signers.@password = The password of the private key.
##### ivysettings.statuses.status
ivysettings.statuses.status = Define one available module status.
ivysettings.statuses.status.@name = name of status defined
ivysettings.statuses.status.@integration = true if this is an integration status, false otherwise
##### ivysettings.statuses
ivysettings.statuses = Defines the list of available statuses.
ivysettings.statuses.@default = the name of the status to use when none is declared in an Ivy file
##### ivysettings.timeout-constraint
ivysettings.timeout-constraint = Defines a named timeout constraint that can then be referenced from other places of the Ivy settings file, like the resolvers.
ivysettings.timeout-constraint.@name = name of timeout constraint
ivysettings.timeout-constraint.@connectionTimeout = An integer value, in milliseconds, that will be used as the timeout while establishing a connection. A value greater than 0 is used literally as the timeout. A value of 0 indicates no timeout and typically translates to wait-forever kind of semantics. A value less than 0 lets the users of this timeout constraint decide what semantics to use. That effectively, implies implementation specific semantics
ivysettings.timeout-constraint.@readTimeout = An integer value, in milliseconds, that will be used as the timeout while reading content from a resource to which an connection has been established. A value greater than 0 is used literally as the timeout. A value of 0 indicates no timeout and typically translates to wait-forever kind of semantics. A value less than 0 lets the users of this timeout constraint decide what semantics to use. That effectively, implies implementation specific semantics
##### ivysettings.timeout-constraints
ivysettings.timeout-constraints = timeout-constraints in Ivy settings allows you to configure timeouts that can then be used by Ivy while communicating with remote systems.
##### ivysettings.triggers
ivysettings.triggers = Defines a list of triggers to activate on some Ivy events.
ivysettings.triggers.@name = the name of the trigger for identification purpose only
ivysettings.triggers.@event = the name of the event on which the trigger should be performed
ivysettings.triggers.@filter = a filter expression used to restrict when the trigger should be performed
##### ivysettings.typedef
ivysettings.typedef = Defines a new type in Ivy. Useful to define new dependency resolvers, in particular, but also latest strategies.
ivysettings.typedef.@name = the name of the type to define. This name is then used as an xml tag.
ivysettings.typedef.@classname = the fully qualified class name of the type to define.
##### ivysettings.version-matchers
ivysettings.version-matchers = Defines a list of version matchers.
ivysettings.version-matchers.@usedefaults = when set to true, includes the built-in version matchers (Latest, Sub Revision, and Version Ranger Matcher). Exact Revision Matcher is always included
